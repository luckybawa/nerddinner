[
  {
    "Id": "515895",
    "ThreadId": "233152",
    "Html": "\r\n<p>The links to the RSVP sets are not showing up in the Dinners object. I followed the instructions to use the ADO.Net Entity Data Model. But of course, in VS2008 the Entity Framework does not automatically implement the foreign key relationship. When I downloaded\r\n the VS 2008 solution I see that it does not use the Entity Framework, but uses Link to SQL instead.</p>\r\n<p>a. Is the reason that the VS 2008 solution uses Link to SQL Classes (.dbml) instead of Entities (.edmx), because it doesn't implement the foreign key relationships?</p>\r\n<p>b. Is it possible to get the RSVP sets to work using the Entity Framework, and if so, how would the code have to be written ?&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Robert Tanenbaum</p>\r\n",
    "PostedDate": "2010-11-02T05:53:08.663-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "516532",
    "ThreadId": "233152",
    "Html": "\r\n<p>Adding a ToList() in the DinnerRepository.cs file solves this problem.</p>\r\n<p>Here is what was happening.</p>\r\n<p>In DinnersController.cs I have the code to display dinner details</p>\r\n<p>&nbsp;//&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>// GET: /Dinners/Details/2&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>[HttpGet] &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>public ActionResult Details(int id)&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>{&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>Dinners dinner = dinnerRepository.GetDinner(id);&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>if (dinner == null)&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>return View(&quot;NotFound&quot;);&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>else&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>return View(dinner);&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>}</p>\r\n<p>When I set a breakpoint and I look at the dinner object, I see that the RSVPs collection has zero items. However, if I step into the GetDinner() method and I look at the entities to see if the RSVP objects are there, it says &quot;Expanding the Results View will\r\n enumerate the IEnumerable&quot; If I don't expand them, then the dinner object that is returned has zero RSVPs in the collection. However, if I do expand the Results View, then the dinner object has a valid RSVPs collection!</p>\r\n<p>CAN ANYONE EXPLAIN THIS?</p>\r\n<p>However, I took advantage of this quirk (BUG?) and added a line in the GetDinner() method to examine the RSVPs collection before the dinner object is returned.</p>\r\n<p>NOW IT WORKS EVERY TIME. HOWEVER IT SEEMS LIKE A VERY DUMB IDEA TO REQUIRE THE ToList() ENUMERATION IN ORDER TO GET THE RSVPs collection to be filled in.</p>\r\n<p>Here is the code in DinnerRepository.cs:</p>\r\n<p>public Dinners GetDinner(int id)&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>{&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>// NOTE: The RSVPs listing won't show up in the Dinners object unless it gets enumerated&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>var rList = entities.RSVPs.ToList();&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\"></span>return entities.Dinners.FirstOrDefault(d =&gt; d.DinnerID == id);&nbsp;&nbsp; &nbsp; &nbsp;</p>\r\n<p>}</p>\r\n<p>IS THIS A BUG IN THE VS2008 version of Entity Framework, that collections based on a foreign key relationship do not automatically get populated unless they are explicitly accessed to force the enumeration?</p>\r\n<p>Is there a bug fix for this?</p>\r\n",
    "PostedDate": "2010-11-03T09:13:00.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]